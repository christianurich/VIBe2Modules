from pyvibe import *


class RasterDataToPoints(Module):        

    def __init__(self):
            Module.__init__(self)
            
    def init(self, params):
        self.paramComplete = True  
        if params.has_key("Height") == True:
                    self.height = long(params["Height"])
        else:
            self.height  = -1
            self.paramComplete = False   
            print "Error: Module White Noise needs parameterfile with where height is defined"
                    
        if params.has_key("Width") == True:        
            self.width = long(params["Width"])
        else:
            self.width = -1
            self.paramComplete = False   
            print "Error: Module White Noise needs parameterfile with where width is defined"
                
        if params.has_key("CellSize") == True:        
                self.cellSize = float(params["CellSize"])
        else:
            self.cellSize = -1
            self.paramComplete = False   
            print "Error: Module White Noise needs parameterfile with where cellsize is defined"
                 
        if params.has_key("VectorData") == True:        
            self.vectordata = params["VectorData"]
        if params.has_key("RasterData") == True:        
            self.rasterdata = params["RasterData"]

     

   
    def run(self):
        print "Run BuildingSites"
        vec = VectorData()
        rdata = self.getRasterData(self.rasterdata, self.getT())
        points = PointList()
        for x in range(self.width):
            for y in range(self.height):
                if ( rdata.getValue(x,y) > 0):                    
                    points.append(Point (x*self.cellSize+self.cellSize/2.,y*self.cellSize + self.cellSize/2.,0))
        vec.setPoints("Points", points)
        self.setPoints(self.vectordata, vec)
               
           
    def clone(self):
        return RasterDataToPoints()
 



